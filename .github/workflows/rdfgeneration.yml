# This is a basic workflow to help you get started with Actions

name: RDF Generation

# Controls when the workflow will run
on:
  # Allows daily run of this workflow
  schedule:
    - cron: '0 8 * * 6'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - id: repo
        name: Repo Checkout
        uses: actions/checkout@v4

      - id: python
        name: Python Setup
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install Python dependencies
        run: pip install -r requirements.txt


      - id: jupyter
        name: Jupyter Notebook Execution
        run: jupyter execute AOP-Wiki_XML_to_RDF_conversion.ipynb
        shell: bash

      - id: cleanup
        name: Remove Downloaded Files
        run: rm -f aop-wiki-xml-*
# Add new files in folder, commit along with other modified files, push
#      - id: check_changes
#        name: Check for Changes
#        run: |
#          git diff --exit-code
#          if [ $? -eq 0 ]; then
#            echo "No changes to commit."
#            echo "::set-output name=changes::false"
#          else
#            echo "Changes detected."
#            echo "::set-output name=changes::true"
#          fi
#        continue-on-error: true

      - id: commit
        name: Commit files
#        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.name actions-user
          git config --local user.email "actions@github.com"
          git add *
          git commit -am "GH ACTION Headlines $(date)"
          git push origin master
        env:
          REPO_KEY: ${{secrets.GITHUB_TOKEN}}
          username: github-actions

